{"version":3,"sources":["components/Tweet.js","components/Tweets.js","components/User.js","components/Users.js","components/AddUser.js","components/AddTweet.js","App.js","reducers/usersReducer.js","reducers/tweetsReducer.js","store/store.js","serviceWorker.js","index.js","components/Users.module.css","img/comment.svg","img/like.svg","img/share.svg","img/comment_active.svg","img/like_active.svg","img/share_active.svg","img/upload.svg","img/confirm.svg","img/down-arrow.svg"],"names":["Tweet","users","userId","date","content","image","author","find","el","id","useState","like","setLike","isLike","setIsLike","comment","setComment","isComment","setIsComment","share","setShare","isShare","setIsShare","className","style","backgroundImage","avatar","name","src","confirmImg","alt","username","downArrowImg","onClick","commentImgActive","commentImg","shareImgActive","shareImg","likeImgActive","likeImg","uploadImg","connect","state","tweets","dispatch","getUsers","axios","get","type","data","getTweets","useEffect","map","i","key","Date","toLocaleDateString","User","user__wrapper","name__wrapper","useStyles","makeStyles","theme","button","fontSize","width","margin","display","formControl","minWidth","textField","selectEmpty","marginTop","spacing","URL","window","location","origin","pathname","setName","setAvatar","nickname","setNickname","classes","postCreate","a","post","assign","alert","TextField","label","value","onChange","e","target","variant","Button","endIcon","setAuthor","setImage","setContent","FormControl","InputLabel","Select","labelId","MenuItem","props","to","exact","activeClassName","path","component","Users","AddUser","Tweets","AddTweet","render","initialStore","tweetsReducer","store","action","createStore","combineReducers","composeWithDevTools","applyMiddleware","thunk","Boolean","hostname","match","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","module","exports"],"mappings":"mdAyGeA,EA7FD,SAAC,GAA6C,IAA3CC,EAA0C,EAA1CA,MAAOC,EAAmC,EAAnCA,OAAQC,EAA2B,EAA3BA,KAAMC,EAAqB,EAArBA,QAASC,EAAY,EAAZA,MACrCC,EAASL,EAAMM,MAAK,SAACC,GAAD,OAAQA,EAAGC,KAAOP,KADW,EAG/BQ,mBAAS,GAHsB,mBAGhDC,EAHgD,KAG1CC,EAH0C,OAI3BF,oBAAS,GAJkB,mBAIhDG,EAJgD,KAIxCC,EAJwC,OAKzBJ,mBAAS,GALgB,mBAKhDK,EALgD,KAKvCC,EALuC,OAMrBN,oBAAS,GANY,mBAMhDO,EANgD,KAMrCC,EANqC,OAO7BR,mBAAS,GAPoB,mBAOhDS,EAPgD,KAOzCC,EAPyC,OAQzBV,oBAAS,GARgB,mBAQhDW,EARgD,KAQvCC,EARuC,KAuCvD,OACI,yBAAKC,UAAU,gBACX,yBACIA,UAAU,cACVC,MAAO,CAAEC,gBAAgB,OAAD,cAASnB,QAAT,IAASA,OAAT,EAASA,EAAQoB,OAAjB,QAE5B,yBAAKH,UAAU,kBACX,yBAAKA,UAAU,YACX,yBAAKA,UAAU,QAAf,OAAuBjB,QAAvB,IAAuBA,OAAvB,EAAuBA,EAAQqB,MAC/B,yBAAKC,IAAKC,IAAYC,IAAI,YAAYP,UAAU,YAChD,yBAAKA,UAAU,YAAf,OAA2BjB,QAA3B,IAA2BA,OAA3B,EAA2BA,EAAQyB,UACnC,yBAAKR,UAAU,QACf,yBAAKA,UAAU,QAAQpB,GACvB,yBACIoB,UAAU,aACVK,IAAKI,IACLF,IAAI,eAGZ,yBAAKP,UAAU,WAAWnB,GAC1B,yBAAKmB,UAAU,eACX,yBAAKK,IAAKvB,EAAOyB,IAAI,aAEzB,yBAAKP,UAAU,eACX,yBAAKU,QA3CE,WACfhB,GACAD,GAAW,kBAAMD,EAAU,KAC3BG,GAAcD,KAEdD,GAAW,kBAAMD,EAAU,KAC3BG,GAAcD,MAsCF,yBACIW,IAAKX,EAAYiB,IAAmBC,IACpCL,IAAI,YAER,8BAAOf,IAEX,yBAAKkB,QAxCA,WACbZ,GACAD,GAAS,kBAAMD,EAAQ,KACvBG,GAAYD,KAEZD,GAAS,kBAAMD,EAAQ,KACvBG,GAAYD,MAmCA,yBACIO,IAAKP,EAAUe,IAAiBC,IAChCP,IAAI,UAER,8BAAOX,IAEX,yBAAKc,QAnED,WACZpB,GACAD,GAAQ,kBAAMD,EAAO,KACrBG,GAAWD,KAEXD,GAAQ,kBAAMD,EAAO,KACrBG,GAAWD,MA8DC,yBACIe,IAAKf,EAASyB,IAAgBC,IAC9BT,IAAI,SAER,8BAAOnB,IAEX,6BACI,yBAAKiB,IAAKY,IAAWV,IAAI,gBCrClCW,eA3BE,SAACC,GACd,MAAO,CACHC,OAAQD,EAAMC,OACd1C,MAAOyC,EAAMzC,UAID,SAAC2C,GACjB,MAAO,CACGC,SADH,WACe,OAAD,0HACOC,IAAMC,IAAI,gCADjB,OACP9C,EADO,OAEb2C,EAAS,CACLI,KAAM,eACN/C,MAAOA,EAAMgD,KAAKA,OAJT,8CAOXC,UARH,WAQgB,OAAD,0HACOJ,IAAMC,IAAI,iCADjB,OACRJ,EADQ,OAEdC,EAAS,CACLI,KAAM,gBACNL,OAAQA,EAAOM,KAAKA,OAJV,8CAOlBL,cAIOH,EAtDA,SAAC,GAA4C,IAA1CE,EAAyC,EAAzCA,OAAQ1C,EAAiC,EAAjCA,MAAO4C,EAA0B,EAA1BA,SAAUK,EAAgB,EAAhBA,UASvC,OARAC,qBAAU,WACNN,MACD,CAACA,IAEJM,qBAAU,WACND,MACD,CAACA,IAGA,2CACKP,QADL,IACKA,OADL,EACKA,EAAQS,KAAI,SAAC5C,EAAI6C,GACd,OACI,kBAAC,EAAD,CACIC,IAAG,OAAE9C,QAAF,IAAEA,OAAF,EAAEA,EAAIC,GACTP,OAAM,OAAEM,QAAF,IAAEA,OAAF,EAAEA,EAAIN,OACZD,MAAOA,EACPE,KAAI,UAAK,IAAIoD,KAAK,KAAM,EAAGF,GAAGG,sBAC9BpD,QAAO,OAAEI,QAAF,IAAEA,OAAF,EAAEA,EAAIJ,QACbC,MAAK,OAAEG,QAAF,IAAEA,OAAF,EAAEA,EAAIH,e,iBCPpBoD,EAdF,SAAC,GAAgC,IAA9B9B,EAA6B,EAA7BA,KAAMD,EAAuB,EAAvBA,OAAQK,EAAe,EAAfA,SAC1B,OACI,yBAAKR,UAAWC,IAAMkC,eAClB,yBAAKnC,UAAWC,IAAME,QAClB,yBAAKE,IAAKF,EAAQI,IAAI,YAE1B,yBAAKP,UAAWC,IAAMmC,eAClB,yBAAKpC,UAAWC,IAAMG,MAAtB,SAAmCA,GACnC,yBAAKJ,UAAWC,IAAMO,UAAtB,aAA2CA,MC6C5CU,eA3BE,SAACC,GACd,MAAO,CACHzC,MAAOyC,EAAMzC,MACb0C,OAAQD,EAAMC,WAIF,SAACC,GACjB,MAAO,CACGC,SADH,WACe,OAAD,0HACOC,IAAMC,IAAI,gCADjB,OACP9C,EADO,OAEb2C,EAAS,CACLI,KAAM,eACN/C,MAAOA,EAAMgD,KAAKA,OAJT,8CAOXC,UARH,WAQgB,OAAD,0HACOJ,IAAMC,IAAI,iCADjB,OACRJ,EADQ,OAEdC,EAAS,CACLI,KAAM,gBACNL,OAAQA,EAAOM,KAAKA,OAJV,8CAOlBL,cAIOH,EAnDD,SAAC,GAAyB,IAAvBI,EAAsB,EAAtBA,SAAU5C,EAAY,EAAZA,MAKvB,OAJAkD,qBAAU,WACNN,MACD,CAACA,IAGA,yBAAKtB,UAAU,kBACX,qCACA,yBAAKA,UAAU,SAAf,OACKtB,QADL,IACKA,OADL,EACKA,EAAOmD,KAAI,SAAC5C,GACT,OACI,kBAAC,EAAD,CACImB,KAAMnB,EAAGmB,KACTI,SAAUvB,EAAGuB,SACbL,OAAQlB,EAAGkB,OACX4B,IAAK9C,EAAGC,a,4CCP9BmD,EAAYC,aAAW,SAACC,GAAD,MAAY,CACrCC,OAAQ,CACJC,SAAU,OACVC,MAAO,QACPC,OAAQ,YACRC,QAAS,QAEbC,YAAa,CACTF,OAAQ,YACRG,SAAU,IACVJ,MAAO,IACPE,QAAS,QAEbG,UAAW,CACPJ,OAAQ,YACRG,SAAU,IACVJ,MAAO,IACPE,QAAS,QAEbI,YAAa,CACTC,UAAWV,EAAMW,QAAQ,QAmFlBhC,eAnBE,SAACC,GACd,MAAO,CACHzC,MAAOyC,EAAMzC,UAID,SAAC2C,GACjB,MAAO,CACGC,SADH,WACe,OAAD,0HACOC,IAAMC,IAAI,gCADjB,OACP9C,EADO,OAEb2C,EAAS,CACLI,KAAM,eACN/C,MAAOA,EAAMgD,KAAKA,OAJT,8CAOjBL,cAIOH,EA/EC,WACZ,IAAMiC,EAAMC,OAAOC,SAASC,OAASF,OAAOC,SAASE,SADnC,EAEMpE,mBAAS,IAFf,mBAEXiB,EAFW,KAELoD,EAFK,OAGUrE,mBAAS,IAHnB,mBAGXgB,EAHW,KAGHsD,EAHG,OAIctE,mBAAS,IAJvB,mBAIXuE,EAJW,KAIDC,EAJC,KAMZC,EAAUvB,IAEVwB,EAAU,uCAAG,sBAAAC,EAAA,sDACX1D,GAAQD,GAAUuD,GAClBnC,IAAMwC,KAAK,+BAAgC,CACvC3D,KAAMA,EACNI,SAAS,IAAD,OAAMkD,GACdvD,OAAQA,IAEZqD,EAAQ,IACRC,EAAU,IACVE,EAAY,IACZP,OAAOC,SAASW,OAAhB,UAA0Bb,KACvBc,MAAM,0BAXE,2CAAH,qDAchB,OACI,yBAAKjE,UAAU,iBACX,kBAACkE,EAAA,EAAD,CACIhF,GAAG,sBACHiF,MAAM,OACNC,MAAOhE,EACPiE,SAAU,SAACC,GAAD,OAAOd,EAAQc,EAAEC,OAAOH,QAClCI,QAAQ,WACRxE,UAAW4D,EAAQb,YAEvB,kBAACmB,EAAA,EAAD,CACIhF,GAAG,sBACHiF,MAAM,SACNC,MAAOjE,EACPkE,SAAU,SAACC,GAAD,OAAOb,EAAUa,EAAEC,OAAOH,QACpCI,QAAQ,WACRxE,UAAW4D,EAAQb,YAEvB,kBAACmB,EAAA,EAAD,CACIhF,GAAG,sBACHiF,MAAM,WACNC,MAAOV,EACPW,SAAU,SAACC,GAAD,OAAOX,EAAYW,EAAEC,OAAOH,QACtCI,QAAQ,WACRxE,UAAW4D,EAAQb,YAEvB,kBAAC0B,EAAA,EAAD,CACID,QAAQ,YACRxE,UAAW4D,EAAQpB,OACnBkC,QAAS,kBAAC,IAAD,MACThE,QAASmD,GAJb,gB,oCCxENxB,EAAYC,aAAW,SAACC,GAAD,MAAY,CACrCC,OAAQ,CACJC,SAAU,OACVC,MAAO,QACPC,OAAQ,YACRC,QAAS,QAEbC,YAAa,CACTF,OAAQ,YACRG,SAAU,IACVJ,MAAO,IACPE,QAAS,QAEbG,UAAW,CACPJ,OAAQ,YACRG,SAAU,IACVJ,MAAO,IACPE,QAAS,QAEbI,YAAa,CACTC,UAAWV,EAAMW,QAAQ,QA2FlBhC,eAnBE,SAACC,GACd,MAAO,CACHzC,MAAOyC,EAAMzC,UAID,SAAC2C,GACjB,MAAO,CACGC,SADH,WACe,OAAD,0HACOC,IAAMC,IAAI,gCADjB,OACP9C,EADO,OAEb2C,EAAS,CACLI,KAAM,eACN/C,MAAOA,EAAMgD,KAAKA,OAJT,8CAOjBL,cAIOH,EAvFE,SAAC,GAAe,IAAbxC,EAAY,EAAZA,MACVyE,EAAMC,OAAOC,SAASC,OAASF,OAAOC,SAASE,SADzB,EAEApE,mBAAS,IAFT,mBAErBJ,EAFqB,KAEb4F,EAFa,OAGFxF,mBAAS,IAHP,mBAGrBL,EAHqB,KAGd8F,EAHc,OAIEzF,mBAAS,IAJX,mBAIrBN,EAJqB,KAIZgG,EAJY,KAMtBjB,EAAUvB,IAEVwB,EAAU,uCAAG,sBAAAC,EAAA,sDACX/E,GAAUD,GAASD,GACnB0C,IAAMwC,KAAK,gCAAiC,CACxCpF,OAAQI,EACRF,QAASA,EACTC,MAAOA,IAEX6F,EAAU,IACVC,EAAS,IACTC,EAAW,IACXzB,OAAOC,SAASW,OAAhB,UAA0Bb,EAA1B,cACGc,MAAM,0BAXE,2CAAH,qDAchB,OACI,yBAAKjE,UAAU,iBACX,kBAAC8E,EAAA,EAAD,CAAaN,QAAQ,WAAWxE,UAAW4D,EAAQf,aAC/C,kBAACkC,EAAA,EAAD,CAAY7F,GAAG,qCAAf,eAGA,kBAAC8F,EAAA,EAAD,CACIC,QAAQ,oCACR/F,GAAG,8BACHkF,MAAOrF,EACPsF,SAAU,SAACC,GAAD,OAAOK,EAAUL,EAAEC,OAAOH,QACpCD,MAAM,eALV,OAOKzF,QAPL,IAOKA,OAPL,EAOKA,EAAOmD,KAAI,SAAC5C,GACT,OAAO,kBAACiG,EAAA,EAAD,CAAUd,MAAK,OAAEnF,QAAF,IAAEA,OAAF,EAAEA,EAAIC,IAAKD,EAAGmB,WAIhD,kBAAC8D,EAAA,EAAD,CACIhF,GAAG,sBACHiF,MAAM,aACNC,MAAOtF,EACPuF,SAAU,SAACC,GAAD,OAAOM,EAASN,EAAEC,OAAOH,QACnCI,QAAQ,WACRxE,UAAW4D,EAAQb,YAEvB,kBAACmB,EAAA,EAAD,CACIhF,GAAG,sBACHiF,MAAM,YACNC,MAAOvF,EACPwF,SAAU,SAACC,GAAD,OAAOO,EAAWP,EAAEC,OAAOH,QACrCI,QAAQ,WACRxE,UAAW4D,EAAQb,YAEvB,kBAAC0B,EAAA,EAAD,CACID,QAAQ,YACRxE,UAAW4D,EAAQpB,OACnBkC,QAAS,kBAAC,IAAD,MACThE,QAASmD,GAJb,gBCJG3C,eA3BE,SAACC,GACd,MAAO,CACHzC,MAAOyC,EAAMzC,MACb0C,OAAQD,EAAMC,WAIF,SAACC,GACjB,MAAO,CACGC,SADH,WACe,OAAD,0HACOC,IAAMC,IAAI,gCADjB,OACP9C,EADO,OAEb2C,EAAS,CACLI,KAAM,eACN/C,MAAOA,EAAMgD,KAAKA,OAJT,8CAOXC,UARH,WAQgB,OAAD,0HACOJ,IAAMC,IAAI,iCADjB,OACRJ,EADQ,OAEdC,EAAS,CACLI,KAAM,gBACNL,OAAQA,EAAOM,KAAKA,OAJV,8CAOlBL,cAIOH,EAzEH,SAACiE,GACgDA,EAAjDzG,MAAiDyG,EAA1C/D,OADK,IACGE,EAAkC6D,EAAlC7D,SAAUK,EAAwBwD,EAAxBxD,UAAwBwD,EAAb9D,SAU5C,OARAO,qBAAU,WACNN,MACD,CAACA,IAEJM,qBAAU,WACND,MACD,CAACA,IAGA,kBAAC,IAAD,KACI,yBAAK3B,UAAU,kBACX,yBAAKA,UAAU,UACX,kBAAC,IAAD,CAASoF,GAAG,SAASC,OAAK,EAACC,gBAAgB,YAA3C,SAGA,kBAAC,IAAD,CAASF,GAAG,WAAWC,OAAK,EAACC,gBAAgB,YAA7C,YAGA,kBAAC,IAAD,CAASF,GAAG,UAAUC,OAAK,EAACC,gBAAgB,YAA5C,UAGA,kBAAC,IAAD,CAASF,GAAG,YAAYC,OAAK,EAACC,gBAAgB,YAA9C,eAKR,yBAAKtF,UAAU,mBACX,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAOuF,KAAK,SAASF,OAAK,EAACG,UAAWC,IACtC,kBAAC,IAAD,CAAOF,KAAK,WAAWF,OAAK,EAACG,UAAWE,IACxC,kBAAC,IAAD,CAAOH,KAAK,UAAUF,OAAK,EAACG,UAAWG,IACvC,kBAAC,IAAD,CAAOJ,KAAK,YAAYF,OAAK,EAACG,UAAWI,IACzC,kBAAC,IAAD,CACIL,KAAK,IACLF,OAAK,EACLQ,OAAQ,kBAAM,kBAAC,IAAD,CAAUT,GAAG,oB,oCCvD7CU,GAAe,GCAfA,GAAe,GAeNC,GAbO,WAAmC,IAAlCC,EAAiC,uDAAzBF,GAAcG,EAAW,uCACpD,OAAQA,EAAOxE,MACX,IAAK,gBACqBuE,EAAMhH,MACxB,SAACC,GAAD,aAAU,OAAFA,QAAE,IAAFA,GAAA,UAAAA,EAAIF,cAAJ,eAAYqB,SAAZ,OAAqB6F,QAArB,IAAqBA,OAArB,EAAqBA,EAAQlH,WAEzC,OAAO,aAAIkH,EAAO7E,QAEtB,QACI,OAAO0E,KCGJE,GARDE,uBACVC,2BAAgB,CACZzH,MFNO,WAAmC,IAAlCsH,EAAiC,uDAAzBF,GAAcG,EAAW,uCAC7C,OAAQA,EAAOxE,MACX,IAAK,eACD,OAAO,aAAIwE,EAAOvH,OAEtB,QACI,OAAOsH,IECX5E,OAAQ2E,KAEZK,+BAAoBC,2BAAgBC,QCCpBC,QACW,cAA7BnD,OAAOC,SAASmD,UAEe,UAA7BpD,OAAOC,SAASmD,UAEhBpD,OAAOC,SAASmD,SAASC,MACvB,2DCVNC,IAASb,OACL,kBAAC,IAAMc,WAAP,KACI,kBAAC,IAAD,CAAUX,MAAOA,IACb,kBAAC,EAAD,QAGRY,SAASC,eAAe,SDqHtB,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,MAAK,SAAAC,GACjCA,EAAaC,iB,mBEpInBC,EAAOC,QAAU,CAAC,cAAgB,6BAA6B,OAAS,sBAAsB,cAAgB,+B,mBCD9GD,EAAOC,QAAU,IAA0B,qC,mBCA3CD,EAAOC,QAAU,IAA0B,kC,mBCA3CD,EAAOC,QAAU,IAA0B,mC,mBCA3CD,EAAOC,QAAU,IAA0B,4C,mBCA3CD,EAAOC,QAAU,IAA0B,yC,mBCA3CD,EAAOC,QAAU,IAA0B,0C,mBCA3CD,EAAOC,QAAU,IAA0B,oC,mBCA3CD,EAAOC,QAAU,IAA0B,qC,mBCA3CD,EAAOC,QAAU,IAA0B,wC","file":"static/js/main.1c1d05e5.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\n\r\nimport commentImg from \"../img/comment.svg\";\r\nimport likeImg from \"../img/like.svg\";\r\nimport shareImg from \"../img/share.svg\";\r\nimport commentImgActive from \"../img/comment_active.svg\";\r\nimport likeImgActive from \"../img/like_active.svg\";\r\nimport shareImgActive from \"../img/share_active.svg\";\r\nimport uploadImg from \"../img/upload.svg\";\r\nimport confirmImg from \"../img/confirm.svg\";\r\nimport downArrowImg from \"../img/down-arrow.svg\";\r\n\r\nconst Tweet = ({ users, userId, date, content, image }) => {\r\n    const author = users.find((el) => el.id === userId);\r\n\r\n    const [like, setLike] = useState(0);\r\n    const [isLike, setIsLike] = useState(false);\r\n    const [comment, setComment] = useState(0);\r\n    const [isComment, setIsComment] = useState(false);\r\n    const [share, setShare] = useState(0);\r\n    const [isShare, setIsShare] = useState(false);\r\n\r\n    const likeToggler = () => {\r\n        if (isLike) {\r\n            setLike(() => like - 1);\r\n            setIsLike(!isLike);\r\n        } else {\r\n            setLike(() => like + 1);\r\n            setIsLike(!isLike);\r\n        }\r\n    };\r\n\r\n    const commentToggler = () => {\r\n        if (isComment) {\r\n            setComment(() => comment - 1);\r\n            setIsComment(!isComment);\r\n        } else {\r\n            setComment(() => comment + 1);\r\n            setIsComment(!isComment);\r\n        }\r\n    };\r\n\r\n    const shareToggler = () => {\r\n        if (isShare) {\r\n            setShare(() => share - 1);\r\n            setIsShare(!isShare);\r\n        } else {\r\n            setShare(() => share + 1);\r\n            setIsShare(!isShare);\r\n        }\r\n    };\r\n    return (\r\n        <div className=\"post-wrapper\">\r\n            <div\r\n                className=\"post_avatar\"\r\n                style={{ backgroundImage: `url(${author?.avatar})` }}\r\n            ></div>\r\n            <div className=\"content-column\">\r\n                <div className=\"name-row\">\r\n                    <div className=\"name\">{author?.name}</div>\r\n                    <img src={confirmImg} alt=\"Confirmed\" className=\"confirm\" />\r\n                    <div className=\"nickname\">{author?.username}</div>\r\n                    <div className=\"dot\"></div>\r\n                    <div className=\"date\">{date}</div>\r\n                    <img\r\n                        className=\"more-arrow\"\r\n                        src={downArrowImg}\r\n                        alt=\"Show more\"\r\n                    />\r\n                </div>\r\n                <div className=\"content\">{content}</div>\r\n                <div className=\"content-img\">\r\n                    <img src={image} alt=\"Content\" />\r\n                </div>\r\n                <div className=\"social-btns\">\r\n                    <div onClick={commentToggler}>\r\n                        <img\r\n                            src={isComment ? commentImgActive : commentImg}\r\n                            alt=\"Comment\"\r\n                        />\r\n                        <span>{comment}</span>\r\n                    </div>\r\n                    <div onClick={shareToggler}>\r\n                        <img\r\n                            src={isShare ? shareImgActive : shareImg}\r\n                            alt=\"Share\"\r\n                        />\r\n                        <span>{share}</span>\r\n                    </div>\r\n                    <div onClick={likeToggler}>\r\n                        <img\r\n                            src={isLike ? likeImgActive : likeImg}\r\n                            alt=\"Like\"\r\n                        />\r\n                        <span>{like}</span>\r\n                    </div>\r\n                    <div>\r\n                        <img src={uploadImg} alt=\"Upload\" />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Tweet;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport axios from \"axios\";\r\n\r\nimport Tweet from \"./Tweet\";\r\n\r\nconst Tweets = ({ tweets, users, getUsers, getTweets }) => {\r\n    useEffect(() => {\r\n        getUsers();\r\n    }, [getUsers]);\r\n\r\n    useEffect(() => {\r\n        getTweets();\r\n    }, [getTweets]);\r\n\r\n    return (\r\n        <>\r\n            {tweets?.map((el, i) => {\r\n                return (\r\n                    <Tweet\r\n                        key={el?.id}\r\n                        userId={el?.userId}\r\n                        users={users}\r\n                        date={`${new Date(2020, 8, i).toLocaleDateString()}`}\r\n                        content={el?.content}\r\n                        image={el?.image}\r\n                    />\r\n                );\r\n            })}\r\n        </>\r\n    );\r\n};\r\n\r\nconst mapState = (state) => {\r\n    return {\r\n        tweets: state.tweets,\r\n        users: state.users,\r\n    };\r\n};\r\n\r\nconst mapDispatch = (dispatch) => {\r\n    return {\r\n        async getUsers() {\r\n            const users = await axios.get(\"http://domer.tech:9999/users\");\r\n            dispatch({\r\n                type: \"UPDATE_USERS\",\r\n                users: users.data.data,\r\n            });\r\n        },\r\n        async getTweets() {\r\n            const tweets = await axios.get(\"http://domer.tech:9999/tweets\");\r\n            dispatch({\r\n                type: \"UPDATE_TWEETS\",\r\n                tweets: tweets.data.data,\r\n            });\r\n        },\r\n        dispatch,\r\n    };\r\n};\r\n\r\nexport default connect(mapState, mapDispatch)(Tweets);\r\n","import React from \"react\";\r\n\r\nimport style from \"./Users.module.css\";\r\n\r\nconst User = ({ name, avatar, username }) => {\r\n    return (\r\n        <div className={style.user__wrapper}>\r\n            <div className={style.avatar}>\r\n                <img src={avatar} alt=\"Avatar\" />\r\n            </div>\r\n            <div className={style.name__wrapper}>\r\n                <div className={style.name}>Name: {name}</div>\r\n                <div className={style.username}>Nickname: {username}</div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default User;\r\n","import React, { useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport axios from \"axios\";\r\n\r\nimport User from \"./User\";\r\n\r\nconst Users = ({ getUsers, users }) => {\r\n    useEffect(() => {\r\n        getUsers();\r\n    }, [getUsers]);\r\n\r\n    return (\r\n        <div className=\"users__wrapper\">\r\n            <h2>Users</h2>\r\n            <div className=\"users\">\r\n                {users?.map((el) => {\r\n                    return (\r\n                        <User\r\n                            name={el.name}\r\n                            username={el.username}\r\n                            avatar={el.avatar}\r\n                            key={el.id}\r\n                        />\r\n                    );\r\n                })}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nconst mapState = (state) => {\r\n    return {\r\n        users: state.users,\r\n        tweets: state.tweets,\r\n    };\r\n};\r\n\r\nconst mapDispatch = (dispatch) => {\r\n    return {\r\n        async getUsers() {\r\n            const users = await axios.get(\"http://domer.tech:9999/users\");\r\n            dispatch({\r\n                type: \"UPDATE_USERS\",\r\n                users: users.data.data,\r\n            });\r\n        },\r\n        async getTweets() {\r\n            const tweets = await axios.get(\"http://domer.tech:9999/tweets\");\r\n            dispatch({\r\n                type: \"UPDATE_TWEETS\",\r\n                tweets: tweets.data.data,\r\n            });\r\n        },\r\n        dispatch,\r\n    };\r\n};\r\n\r\nexport default connect(mapState, mapDispatch)(Users);\r\n","import React, { useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport axios from \"axios\";\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\nimport Button from \"@material-ui/core/Button\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport SendIcon from \"@material-ui/icons/Send\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    button: {\r\n        fontSize: \"20px\",\r\n        width: \"900px\",\r\n        margin: \"20px auto\",\r\n        display: \"flex\",\r\n    },\r\n    formControl: {\r\n        margin: \"20px auto\",\r\n        minWidth: 120,\r\n        width: 900,\r\n        display: \"flex\",\r\n    },\r\n    textField: {\r\n        margin: \"20px auto\",\r\n        minWidth: 120,\r\n        width: 900,\r\n        display: \"flex\",\r\n    },\r\n    selectEmpty: {\r\n        marginTop: theme.spacing(2),\r\n    },\r\n}));\r\n\r\nconst AddUser = () => {\r\n    const URL = window.location.origin + window.location.pathname;\r\n    const [name, setName] = useState(\"\");\r\n    const [avatar, setAvatar] = useState(\"\");\r\n    const [nickname, setNickname] = useState(\"\");\r\n\r\n    const classes = useStyles();\r\n\r\n    const postCreate = async () => {\r\n        if (name && avatar && nickname) {\r\n            axios.post(\"http://domer.tech:9999/users\", {\r\n                name: name,\r\n                username: `@${nickname}`,\r\n                avatar: avatar,\r\n            });\r\n            setName(\"\");\r\n            setAvatar(\"\");\r\n            setNickname(\"\");\r\n            window.location.assign(`${URL}`);\r\n        } else alert(\"Please enter user info\");\r\n    };\r\n\r\n    return (\r\n        <div className=\"addUser__form\">\r\n            <TextField\r\n                id=\"outlined-helperText\"\r\n                label=\"Name\"\r\n                value={name}\r\n                onChange={(e) => setName(e.target.value)}\r\n                variant=\"outlined\"\r\n                className={classes.textField}\r\n            />\r\n            <TextField\r\n                id=\"outlined-helperText\"\r\n                label=\"Avatar\"\r\n                value={avatar}\r\n                onChange={(e) => setAvatar(e.target.value)}\r\n                variant=\"outlined\"\r\n                className={classes.textField}\r\n            />\r\n            <TextField\r\n                id=\"outlined-helperText\"\r\n                label=\"Nickname\"\r\n                value={nickname}\r\n                onChange={(e) => setNickname(e.target.value)}\r\n                variant=\"outlined\"\r\n                className={classes.textField}\r\n            />\r\n            <Button\r\n                variant=\"contained\"\r\n                className={classes.button}\r\n                endIcon={<SendIcon />}\r\n                onClick={postCreate}\r\n            >\r\n                Add user\r\n            </Button>\r\n        </div>\r\n    );\r\n};\r\n\r\nconst mapState = (state) => {\r\n    return {\r\n        users: state.users,\r\n    };\r\n};\r\n\r\nconst mapDispatch = (dispatch) => {\r\n    return {\r\n        async getUsers() {\r\n            const users = await axios.get(\"http://domer.tech:9999/users\");\r\n            dispatch({\r\n                type: \"UPDATE_USERS\",\r\n                users: users.data.data,\r\n            });\r\n        },\r\n        dispatch,\r\n    };\r\n};\r\n\r\nexport default connect(mapState, mapDispatch)(AddUser);\r\n","import React, { useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport axios from \"axios\";\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\nimport Button from \"@material-ui/core/Button\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport SendIcon from \"@material-ui/icons/Send\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    button: {\r\n        fontSize: \"20px\",\r\n        width: \"900px\",\r\n        margin: \"20px auto\",\r\n        display: \"flex\",\r\n    },\r\n    formControl: {\r\n        margin: \"20px auto\",\r\n        minWidth: 120,\r\n        width: 900,\r\n        display: \"flex\",\r\n    },\r\n    textField: {\r\n        margin: \"20px auto\",\r\n        minWidth: 120,\r\n        width: 900,\r\n        display: \"flex\",\r\n    },\r\n    selectEmpty: {\r\n        marginTop: theme.spacing(2),\r\n    },\r\n}));\r\n\r\nconst AddTweet = ({ users }) => {\r\n    const URL = window.location.origin + window.location.pathname;\r\n    const [author, setAuthor] = useState(\"\");\r\n    const [image, setImage] = useState(\"\");\r\n    const [content, setContent] = useState(\"\");\r\n\r\n    const classes = useStyles();\r\n\r\n    const postCreate = async () => {\r\n        if (author && image && content) {\r\n            axios.post(\"http://domer.tech:9999/tweets\", {\r\n                userId: author,\r\n                content: content,\r\n                image: image,\r\n            });\r\n            setAuthor(\"\");\r\n            setImage(\"\");\r\n            setContent(\"\");\r\n            window.location.assign(`${URL}#/tweets`);\r\n        } else alert(\"Please enter post info\");\r\n    };\r\n\r\n    return (\r\n        <div className=\"addUser__form\">\r\n            <FormControl variant=\"outlined\" className={classes.formControl}>\r\n                <InputLabel id=\"demo-simple-select-outlined-label\">\r\n                    Select user\r\n                </InputLabel>\r\n                <Select\r\n                    labelId=\"demo-simple-select-outlined-label\"\r\n                    id=\"demo-simple-select-outlined\"\r\n                    value={author}\r\n                    onChange={(e) => setAuthor(e.target.value)}\r\n                    label=\"Select user\"\r\n                >\r\n                    {users?.map((el) => {\r\n                        return <MenuItem value={el?.id}>{el.name}</MenuItem>;\r\n                    })}\r\n                </Select>\r\n            </FormControl>\r\n            <TextField\r\n                id=\"outlined-helperText\"\r\n                label=\"Post image\"\r\n                value={image}\r\n                onChange={(e) => setImage(e.target.value)}\r\n                variant=\"outlined\"\r\n                className={classes.textField}\r\n            />\r\n            <TextField\r\n                id=\"outlined-helperText\"\r\n                label=\"Post text\"\r\n                value={content}\r\n                onChange={(e) => setContent(e.target.value)}\r\n                variant=\"outlined\"\r\n                className={classes.textField}\r\n            />\r\n            <Button\r\n                variant=\"contained\"\r\n                className={classes.button}\r\n                endIcon={<SendIcon />}\r\n                onClick={postCreate}\r\n            >\r\n                Add Post\r\n            </Button>\r\n        </div>\r\n    );\r\n};\r\n\r\nconst mapState = (state) => {\r\n    return {\r\n        users: state.users,\r\n    };\r\n};\r\n\r\nconst mapDispatch = (dispatch) => {\r\n    return {\r\n        async getUsers() {\r\n            const users = await axios.get(\"http://domer.tech:9999/users\");\r\n            dispatch({\r\n                type: \"UPDATE_USERS\",\r\n                users: users.data.data,\r\n            });\r\n        },\r\n        dispatch,\r\n    };\r\n};\r\n\r\nexport default connect(mapState, mapDispatch)(AddTweet);\r\n","import React, { useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n    HashRouter as Router,\r\n    NavLink,\r\n    Route,\r\n    Switch,\r\n    Redirect,\r\n} from \"react-router-dom\";\r\n\r\nimport \"./App.css\";\r\nimport Tweets from \"./components/Tweets\";\r\nimport Users from \"./components/Users\";\r\nimport AddUser from \"./components/AddUser\";\r\nimport AddTweet from \"./components/AddTweet\";\r\n\r\nconst App = (props) => {\r\n    const { users, tweets, getUsers, getTweets, dispatch } = props;\r\n\r\n    useEffect(() => {\r\n        getUsers();\r\n    }, [getUsers]);\r\n\r\n    useEffect(() => {\r\n        getTweets();\r\n    }, [getTweets]);\r\n\r\n    return (\r\n        <Router>\r\n            <div className=\"header-wrapper\">\r\n                <nav className=\"header\">\r\n                    <NavLink to=\"/users\" exact activeClassName=\"selected\">\r\n                        Users\r\n                    </NavLink>\r\n                    <NavLink to=\"/adduser\" exact activeClassName=\"selected\">\r\n                        Add User\r\n                    </NavLink>\r\n                    <NavLink to=\"/tweets\" exact activeClassName=\"selected\">\r\n                        Tweets\r\n                    </NavLink>\r\n                    <NavLink to=\"/addtweet\" exact activeClassName=\"selected\">\r\n                        Add tweet\r\n                    </NavLink>\r\n                </nav>\r\n            </div>\r\n            <div className=\"content-wrapper\">\r\n                <Switch>\r\n                    <Route path=\"/users\" exact component={Users}></Route>\r\n                    <Route path=\"/adduser\" exact component={AddUser} />\r\n                    <Route path=\"/tweets\" exact component={Tweets}></Route>\r\n                    <Route path=\"/addtweet\" exact component={AddTweet} />\r\n                    <Route\r\n                        path=\"/\"\r\n                        exact\r\n                        render={() => <Redirect to=\"/users\" />}\r\n                    ></Route>\r\n                </Switch>\r\n            </div>\r\n        </Router>\r\n    );\r\n};\r\n\r\nconst mapState = (state) => {\r\n    return {\r\n        users: state.users,\r\n        tweets: state.tweets,\r\n    };\r\n};\r\n\r\nconst mapDispatch = (dispatch) => {\r\n    return {\r\n        async getUsers() {\r\n            const users = await axios.get(\"http://domer.tech:9999/users\");\r\n            dispatch({\r\n                type: \"UPDATE_USERS\",\r\n                users: users.data.data,\r\n            });\r\n        },\r\n        async getTweets() {\r\n            const tweets = await axios.get(\"http://domer.tech:9999/tweets\");\r\n            dispatch({\r\n                type: \"UPDATE_TWEETS\",\r\n                tweets: tweets.data.data,\r\n            });\r\n        },\r\n        dispatch,\r\n    };\r\n};\r\n\r\nexport default connect(mapState, mapDispatch)(App);\r\n","const initialStore = [];\r\n\r\nexport default (store = initialStore, action) => {\r\n    switch (action.type) {\r\n        case \"UPDATE_USERS\": {\r\n            return [...action.users];\r\n        }\r\n        default:\r\n            return store;\r\n    }\r\n};\r\n","const initialStore = [];\r\n\r\nconst tweetsReducer = (store = initialStore, action) => {\r\n    switch (action.type) {\r\n        case \"UPDATE_TWEETS\": {\r\n            const currentAuthor = store.find(\r\n                (el) => el?.author?.name === action?.author\r\n            );\r\n            return [...action.tweets];\r\n        }\r\n        default:\r\n            return initialStore;\r\n    }\r\n};\r\n\r\nexport default tweetsReducer;\r\n","import { createStore, combineReducers, applyMiddleware } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport { composeWithDevTools } from \"redux-devtools-extension\";\r\nimport usersReducer from \"../reducers/usersReducer\";\r\nimport tweetsReducer from \"../reducers/tweetsReducer\";\r\n\r\nconst store = createStore(\r\n    combineReducers({\r\n        users: usersReducer,\r\n        tweets: tweetsReducer,\r\n    }),\r\n    composeWithDevTools(applyMiddleware(thunk))\r\n);\r\n\r\nexport default store;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport store from \"./store/store\";\r\nimport { Provider } from \"react-redux\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\n\r\nReactDOM.render(\r\n    <React.StrictMode>\r\n        <Provider store={store}>\r\n            <App />\r\n        </Provider>\r\n    </React.StrictMode>,\r\n    document.getElementById(\"root\")\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"user__wrapper\":\"Users_user__wrapper__2AOcf\",\"avatar\":\"Users_avatar__3Rx1O\",\"name__wrapper\":\"Users_name__wrapper__1CGt6\"};","module.exports = __webpack_public_path__ + \"static/media/comment.0002e5f6.svg\";","module.exports = __webpack_public_path__ + \"static/media/like.12220a22.svg\";","module.exports = __webpack_public_path__ + \"static/media/share.444db246.svg\";","module.exports = __webpack_public_path__ + \"static/media/comment_active.e371e0b3.svg\";","module.exports = __webpack_public_path__ + \"static/media/like_active.f8fb9825.svg\";","module.exports = __webpack_public_path__ + \"static/media/share_active.abbcc3bb.svg\";","module.exports = __webpack_public_path__ + \"static/media/upload.8f047106.svg\";","module.exports = __webpack_public_path__ + \"static/media/confirm.39726703.svg\";","module.exports = __webpack_public_path__ + \"static/media/down-arrow.da333812.svg\";"],"sourceRoot":""}